{
  "swagger": "2.0",
  "info": {
    "title": "Credit Jambo API",
    "version": "1.0.0",
    "description": "Banking API with savings, security, and user management"
  },
  "host": "localhost:5000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and registration"
    },
    {
      "name": "Savings",
      "description": "Savings account operations and transactions"
    },
    {
      "name": "Security",
      "description": "PIN management, OTP, and account limits"
    },
    {
      "name": "User Management",
      "description": "User profile and account management"
    },
    {
      "name": "Admin",
      "description": "Administrative functions and user management"
    },
    {
      "name": "Contact",
      "description": "Customer support and messaging"
    },
    {
      "name": "Statements",
      "description": "Account statements and reports"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new customer",
        "description": "Create a new customer account with email, password, and personal information",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login customer",
        "description": "Authenticate customer with email and password. Returns access token and refresh token for API access.",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/auth/refresh-token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh access token",
        "description": "Generate a new access token using a valid refresh token. Used to maintain session without re-login.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Forgot password",
        "description": "Send password reset email to customer. Generates a secure reset token sent via email.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset password",
        "description": "Reset customer password using the token received via email. Requires new password confirmation.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout customer",
        "description": "Logout customer and invalidate current session. Clears authentication tokens and logs audit trail.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/devices": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get customer devices",
        "description": "Retrieve list of all devices that have accessed this customer account. Shows device info and verification status.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          },
          {
            "name": "isVerified",
            "in": "query",
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "type": "string"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/sessions": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get active sessions",
        "description": "View all currently active login sessions for this customer account across different devices.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          },
          {
            "name": "isActive",
            "in": "query",
            "type": "string"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Revoke all other sessions",
        "description": "Terminate all other active sessions except the current one. Useful for security when device is compromised.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/sessions/{sessionId}": {
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Revoke specific session",
        "description": "Terminate a specific active session by session ID. Logs out that particular device/browser.",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/devices/{deviceId}/verify": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify device",
        "description": "Mark a device as trusted/verified for this customer account. Reduces future security prompts.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/profile": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get user profile",
        "description": "Get the profile information of the currently logged in user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/change-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Change password",
        "description": "Change user password with current password verification",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "currentPassword": {
                  "example": "any"
                },
                "newPassword": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/change-email": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Change email",
        "description": "Change user email with password verification",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "newEmail": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/verify-email": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify email",
        "description": "Verify user email with OTP",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "any"
                },
                "otp": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/resend-verification": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Resend verification",
        "description": "Resend email verification OTP",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/validate-withdrawal": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Validate withdrawal",
        "description": "Validate withdrawal with PIN or password",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "example": "any"
                },
                "pin": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/savings/transactions/{id}/confirm": {
      "post": {
        "tags": [
          "Savings"
        ],
        "summary": "Confirm pending transaction with PIN",
        "description": "Confirm a pending deposit or withdrawal transaction by providing the transaction PIN. Required for PIN-protected accounts.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TransactionPinDto"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/savings/transactions/{id}/cancel": {
      "post": {
        "tags": [
          "Savings"
        ],
        "summary": "Cancel pending transaction",
        "description": "Cancel a pending transaction before it expires. Only works for transactions in PENDING status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/savings/deposit": {
      "post": {
        "tags": [
          "Savings"
        ],
        "summary": "Make a deposit",
        "description": "Add money to customer savings account. If PIN is enabled, creates pending transaction requiring confirmation.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TransactionDto"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/savings/withdraw": {
      "post": {
        "tags": [
          "Savings"
        ],
        "summary": "Make a withdrawal",
        "description": "Withdraw money from customer savings account. Checks for sufficient balance and sends email if insufficient funds.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TransactionDto"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/savings/balance": {
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Get account balance",
        "description": "Retrieve current account balance and customer information for the authenticated user.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/savings/transactions": {
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Get transaction history with pagination",
        "description": "Retrieve paginated list of all transactions (deposits, withdrawals, reversals) for the customer account.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number (default: 1)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Items per page (default: 10, max: 100)"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/profile": {
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Update user profile",
        "description": "Update customer profile information including name, phone, and other personal details.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/profile/image": {
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Upload profile image",
        "description": "Upload and set customer profile picture. Accepts image files and stores them securely.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/profile/image-url": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get profile image URL",
        "description": "Retrieve the URL of the customer profile image for display purposes.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/security/otp/generate": {
      "post": {
        "tags": [
          "Security"
        ],
        "summary": "Generate OTP",
        "description": "Generate and send One-Time Password via email for additional security verification.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/security/otp/verify": {
      "post": {
        "tags": [
          "Security"
        ],
        "summary": "Verify OTP",
        "description": "Verify the One-Time Password received via email. Required for sensitive operations.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "example": "any"
                },
                "type": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notifications/": {
      "get": {
        "tags": [
          "Notification"
        ],
        "description": "",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "isRead",
            "in": "query",
            "type": "string"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notifications/unread-count": {
      "get": {
        "tags": [
          "Notification"
        ],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notifications/{notificationId}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "description": "",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notifications/{notificationId}/read": {
      "patch": {
        "tags": [
          "Notification"
        ],
        "description": "",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notifications/mark-all-read": {
      "patch": {
        "tags": [
          "Notification"
        ],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contact/": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Create contact message",
        "description": "Submit a support request or inquiry. Can be linked to a specific transaction for context.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contact/my-contacts": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get user contacts",
        "description": "Retrieve paginated list of all contact messages submitted by the authenticated customer.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number (default: 1)"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Items per page (default: 10, max: 100)"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contact/{id}/replies": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get contact replies",
        "description": "Retrieve all replies for a specific contact message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "TransactionDto": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "example": 1000.5
        },
        "description": {
          "type": "string",
          "example": "ATM withdrawal"
        }
      }
    },
    "TransactionPinDto": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string",
          "example": "tx123"
        },
        "pin": {
          "type": "string",
          "example": "1234"
        }
      }
    },
    "SetPinDto": {
      "type": "object",
      "properties": {
        "pin": {
          "type": "string",
          "example": "1234"
        }
      }
    },
    "UpdateProfileDto": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "dateOfBirth": {
          "type": "string",
          "example": "1990-01-01"
        }
      }
    },
    "CreateContactDto": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "Transaction Issue"
        },
        "message": {
          "type": "string",
          "example": "I have a problem with my withdrawal"
        },
        "transactionRefId": {
          "type": "string",
          "example": "TXN2512345001"
        }
      }
    }
  }
}